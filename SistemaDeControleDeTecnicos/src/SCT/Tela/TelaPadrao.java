package SCT.Tela;


import SCT.DAO.PadraoDAO;
import SCT.Classe.IKey;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Alinda
 */
public abstract class TelaPadrao extends javax.swing.JDialog {

    //atributos
    private static final int VISUALIZACAO = 1;
    private static final int EDICAO = 2;
    private static final int INSERCAO = 3;
    protected int estado;
    protected int totCarregado;
    protected int corrente = -1;
    protected PadraoDAO dadosDAO;
    protected ArrayList<IKey> dados;

    public TelaPadrao(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPBarraOperacoesPadrao = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jBPrimeiro = new javax.swing.JButton();
        jBAnterior = new javax.swing.JButton();
        jBProximo = new javax.swing.JButton();
        jBUltimo = new javax.swing.JButton();
        jBNovo = new javax.swing.JButton();
        jBEdita = new javax.swing.JButton();
        jBGrava = new javax.swing.JButton();
        jBExclui = new javax.swing.JButton();
        jBDesfaz = new javax.swing.JButton();
        jBListar = new javax.swing.JButton();
        jBEncerraCadastro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro Padrão");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jToolBar1.setFloatable(false);

        jBPrimeiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Rewind16.gif"))); // NOI18N
        jBPrimeiro.setToolTipText("Primeiro");
        jBPrimeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPrimeiroActionPerformed(evt);
            }
        });
        jToolBar1.add(jBPrimeiro);

        jBAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Back16.gif"))); // NOI18N
        jBAnterior.setToolTipText("Anterior");
        jBAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAnteriorActionPerformed(evt);
            }
        });
        jToolBar1.add(jBAnterior);

        jBProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Forward16.gif"))); // NOI18N
        jBProximo.setToolTipText("Próximo");
        jBProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBProximoActionPerformed(evt);
            }
        });
        jToolBar1.add(jBProximo);

        jBUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/FastForward16.gif"))); // NOI18N
        jBUltimo.setToolTipText("Ultimo");
        jBUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBUltimoActionPerformed(evt);
            }
        });
        jToolBar1.add(jBUltimo);

        jBNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/new.png"))); // NOI18N
        jBNovo.setToolTipText("Novo");
        jBNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoActionPerformed(evt);
            }
        });
        jToolBar1.add(jBNovo);

        jBEdita.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/edit.png"))); // NOI18N
        jBEdita.setToolTipText("Edita");
        jBEdita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditaActionPerformed(evt);
            }
        });
        jToolBar1.add(jBEdita);

        jBGrava.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Save16.gif"))); // NOI18N
        jBGrava.setToolTipText("Grava");
        jBGrava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGravaActionPerformed(evt);
            }
        });
        jToolBar1.add(jBGrava);

        jBExclui.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Delete16.gif"))); // NOI18N
        jBExclui.setToolTipText("Exclui");
        jBExclui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluiActionPerformed(evt);
            }
        });
        jToolBar1.add(jBExclui);

        jBDesfaz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/undo.png"))); // NOI18N
        jBDesfaz.setToolTipText("Desfaz acao");
        jBDesfaz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDesfazActionPerformed(evt);
            }
        });
        jToolBar1.add(jBDesfaz);

        jBListar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/buscar.png"))); // NOI18N
        jBListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBListarActionPerformed(evt);
            }
        });
        jToolBar1.add(jBListar);

        jBEncerraCadastro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/exit.gif"))); // NOI18N
        jBEncerraCadastro.setToolTipText("Cancela");
        jBEncerraCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEncerraCadastroActionPerformed(evt);
            }
        });
        jToolBar1.add(jBEncerraCadastro);

        javax.swing.GroupLayout jPBarraOperacoesPadraoLayout = new javax.swing.GroupLayout(jPBarraOperacoesPadrao);
        jPBarraOperacoesPadrao.setLayout(jPBarraOperacoesPadraoLayout);
        jPBarraOperacoesPadraoLayout.setHorizontalGroup(
            jPBarraOperacoesPadraoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPBarraOperacoesPadraoLayout.createSequentialGroup()
                .addContainerGap(114, Short.MAX_VALUE)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPBarraOperacoesPadraoLayout.setVerticalGroup(
            jPBarraOperacoesPadraoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPBarraOperacoesPadraoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(300, Short.MAX_VALUE)
                .addComponent(jPBarraOperacoesPadrao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(514, Short.MAX_VALUE)
                .addComponent(jPBarraOperacoesPadrao, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        //Reposicionando o ToolBar de acordo com a altura da janela filha
        jPBarraOperacoesPadrao.setLocation(140, (this.getHeight() - 100));

        load();
        setEstado(1);
        limpaCampos();
        exibeDados();
    }//GEN-LAST:event_formWindowOpened

    private void jBEncerraCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEncerraCadastroActionPerformed
        finaliza();
    }//GEN-LAST:event_jBEncerraCadastroActionPerformed

    private void jBDesfazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDesfazActionPerformed
        setEstado(1);
        limpaCampos();
        exibeDados();
    }//GEN-LAST:event_jBDesfazActionPerformed

    private void jBExcluiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluiActionPerformed
        String simNao[] = {"Sim", "Não"};
        int exclui = JOptionPane.showOptionDialog(null, "Confirma exclusão?",
                this.getTitle() + " - Excluindo...",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, simNao, simNao[1]);
        if (exclui == 0) {
            IKey dadoExcluido = montaDado();
            try {
                int regDeletado = corrente;
                dadosDAO.remove(dadoExcluido);
                JOptionPane.showMessageDialog(null, "Operação de exclusão realizada com sucesso!",
                        this.getTitle(), JOptionPane.INFORMATION_MESSAGE);

                load();
                setEstado(1);
                if (regDeletado < totCarregado) {
                    corrente = regDeletado;
                } else {
                    corrente = totCarregado - 1;
                }
                //
                limpaCampos();
                exibeDados();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.getMessage(),
                        this.getTitle() + " - Operação Excluir", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jBExcluiActionPerformed

    private void jBGravaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGravaActionPerformed
        String simNao[] = {"Sim", "Não"};
        IKey dado = null;
        int salva = JOptionPane.showOptionDialog(
                null,
                "Confirma gravação dos dados?",
                "Gravando...",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                simNao,
                simNao[0]);
        if (salva == 0) {
            if (validarCampos()) {
                dado = montaDado();
                if (estado == 3) {
                    try {
                        dadosDAO.add(dado);
                        javax.swing.JOptionPane.showMessageDialog(
                                null,
                                "Novo registro armazenado com sucesso!",
                                this.getTitle(),
                                javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    } catch (SQLException e) {
                        javax.swing.JOptionPane.showMessageDialog(
                                null, e.getMessage(),
                                this.getTitle() + " - Aviso",
                                javax.swing.JOptionPane.ERROR_MESSAGE);
                    }
                } else if (estado == 2) {

                    try {
                        dadosDAO.edit(dado);
                        JOptionPane.showMessageDialog(
                                null,
                                "Alteração realizada com sucesso!",
                                this.getTitle(), JOptionPane.INFORMATION_MESSAGE);

                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null, e.getMessage(), this.getTitle(),
                                JOptionPane.ERROR_MESSAGE);
                    }

                }
            load();
            setEstado(1);
            corrente = posicaoDado(dado);           
            limpaCampos();
            exibeDados();
            }
        }
    }//GEN-LAST:event_jBGravaActionPerformed

    private void jBEditaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditaActionPerformed
        setEstado(2);
    }//GEN-LAST:event_jBEditaActionPerformed

    private void jBNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoActionPerformed
        limpaCampos();
        setEstado(3);
    }//GEN-LAST:event_jBNovoActionPerformed

    private void jBUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBUltimoActionPerformed
        if (corrente == -1) {
            JOptionPane.showMessageDialog(this, "Não há registro(s).",
                    this.getTitle(), JOptionPane.ERROR_MESSAGE);
        } else if (totCarregado > 0) {
            corrente = totCarregado - 1;
        }
        //
        limpaCampos();
        exibeDados();
    }//GEN-LAST:event_jBUltimoActionPerformed

    private void jBProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBProximoActionPerformed
        if (corrente == -1) {
            JOptionPane.showMessageDialog(this, "Não há registro(s).",
                    this.getTitle(), JOptionPane.ERROR_MESSAGE);
        } else if (corrente < totCarregado - 1) {
            corrente += 1;
        } else {
            JOptionPane.showMessageDialog(this, "Último registro.",
                    this.getTitle(), JOptionPane.ERROR_MESSAGE);
        }
        //
        limpaCampos();
        exibeDados();
    }//GEN-LAST:event_jBProximoActionPerformed

    private void jBAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAnteriorActionPerformed
        if (corrente == -1) {
            JOptionPane.showMessageDialog(this, "Não há registro(s).",
                    this.getTitle(), JOptionPane.ERROR_MESSAGE);
        } else if (corrente >= 1) {
            corrente -= 1;
        } else {
            JOptionPane.showMessageDialog(this, "Primeiro registro.",
                    this.getTitle(), JOptionPane.ERROR_MESSAGE);
        }
        //
        limpaCampos();
        exibeDados();
    }//GEN-LAST:event_jBAnteriorActionPerformed

    private void jBPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPrimeiroActionPerformed
        if (corrente == -1) {
            JOptionPane.showMessageDialog(this, "Não há registro(s).",
                    this.getTitle(), JOptionPane.ERROR_MESSAGE);
        } else if (totCarregado > 0) {
            corrente = 0;
        }
        //
        limpaCampos();
        exibeDados();
    }//GEN-LAST:event_jBPrimeiroActionPerformed

    private void jBListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBListarActionPerformed
        listar();
    }//GEN-LAST:event_jBListarActionPerformed

    //========================================
    //Implementar este método na classe filha
    //========================================
    protected abstract IKey montaDado();
    //========================================

   protected abstract boolean validarCampos();
    
    protected int posicaoDado(IKey dado) {
        for (IKey d : dados) {
            if (d.getIndex().equals(dado.getIndex())) {
                return dados.indexOf(d);
            }
        }
        return -1;
    }

    private void load() {
        try {
            dados = dadosDAO.load();
            totCarregado = dados.size();
            if (totCarregado > 0) {
                corrente = 0;
            }
        } catch (SQLException e) {
            javax.swing.JOptionPane.showMessageDialog(
                    null, "Não foi possível recuperar os registros!" + "\n"
                    + e.getMessage(),
                    this.getTitle() + " - Aviso",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    private void exibeDados() {
        if (corrente != -1) {
            exibirDados();
        }
    }

    public int getEstado() {
        return estado;
    }

    //========================================
    //Implementar este método na classe filha
    //========================================
    protected abstract void exibirDados();
    //========================================

    //========================================
    //Implementar este método na classe filha
    //========================================
    protected abstract void listar();
    //========================================

    public void limpaCampos() {
        java.awt.Component[] componentes = this.getContentPane().getComponents();

        for (int i = 0; i < componentes.length; i++) {
            if ((componentes[i] instanceof JPanel)
                    && (!"jPBarraOperacoesPadrao".equals(componentes[i].getName()))) {

                java.awt.Component[] componentes1 = ((JPanel) componentes[i]).getComponents();

                for (int j = 0; j < componentes1.length; j++) {
                    // System.out.println("COMPONENTE "+componentes[i].getClass().getName() );
                    if (componentes1[j] instanceof javax.swing.JTextField) {
                        ((javax.swing.JTextField) componentes1[j]).setText("");
                    }
                }
            }
        }
    }

    public void setEstado(int estado) {
        this.estado = estado;
        if (estado == VISUALIZACAO) {
            setEstadoVisualizacao();
            jBPrimeiro.setEnabled(totCarregado != 0);
            jBUltimo.setEnabled(totCarregado != 0);
            jBProximo.setEnabled(totCarregado != 0);
            jBAnterior.setEnabled(totCarregado != 0);
            jBNovo.setEnabled(true);
            jBEdita.setEnabled(totCarregado != 0);
            jBGrava.setEnabled(false);
            jBExclui.setEnabled(totCarregado != 0);
            jBEncerraCadastro.setEnabled(true);
            jBDesfaz.setEnabled(false);
            jBListar.setEnabled(totCarregado != 0);
            jBNovo.requestFocusInWindow();
        } else if (estado == INSERCAO) {
            setEstadoInsercao();
            jBPrimeiro.setEnabled(false);
            jBUltimo.setEnabled(false);
            jBProximo.setEnabled(false);
            jBAnterior.setEnabled(false);
            jBNovo.setEnabled(false);
            jBEdita.setEnabled(false);
            jBGrava.setEnabled(true);
            jBExclui.setEnabled(false);
            jBDesfaz.setEnabled(true);
            jBEncerraCadastro.setEnabled(false);
            jBListar.setEnabled(false);
        } else {
            if (estado == EDICAO) {
                setEstadoEdicao();
                jBPrimeiro.setEnabled(false);
                jBUltimo.setEnabled(false);
                jBProximo.setEnabled(false);
                jBAnterior.setEnabled(false);
                jBNovo.setEnabled(false);
                jBEdita.setEnabled(false);
                jBGrava.setEnabled(true);
                jBExclui.setEnabled(false);
                jBDesfaz.setEnabled(true);
                jBEncerraCadastro.setEnabled(false);
                jBListar.setEnabled(false);
            }
        }
    }

    //========================================
    //Implementar este método na classe filha
    //========================================
    protected abstract void setEstadoVisualizacao();
    //========================================

    //========================================
    //Implementar este método na classe filha
    //========================================
    protected abstract void setEstadoInsercao();
    //========================================

    //========================================
    //Implementar este método na classe filha
    //========================================
    protected abstract void setEstadoEdicao();
    //========================================

    private void finaliza() {
        this.dispose();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAnterior;
    private javax.swing.JButton jBDesfaz;
    private javax.swing.JButton jBEdita;
    private javax.swing.JButton jBEncerraCadastro;
    private javax.swing.JButton jBExclui;
    private javax.swing.JButton jBGrava;
    private javax.swing.JButton jBListar;
    protected javax.swing.JButton jBNovo;
    private javax.swing.JButton jBPrimeiro;
    private javax.swing.JButton jBProximo;
    private javax.swing.JButton jBUltimo;
    private javax.swing.JPanel jPBarraOperacoesPadrao;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
