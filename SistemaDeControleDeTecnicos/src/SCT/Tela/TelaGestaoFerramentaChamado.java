/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package SCT.Tela;

import SCT.Classe.Chamado;
import SCT.DAO.FerramentaDAO;
import SCT.Classe.Ferramenta;
import SCT.Classe.FerramentaChamado;
import SCT.Classe.IKey;
import SCT.DAO.ChamadoDAO;
import SCT.DAO.FerramentaChamadoDAO;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Alinda
 */
public class TelaGestaoFerramentaChamado extends TelaPadrao {

    /**
     * Creates new form TelaGestaoDeContato
     */
    public TelaGestaoFerramentaChamado(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setComponentes();
        try {
            dadosDAO = new FerramentaChamadoDAO();
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(null, ex.getMessage(),
                    "Conectando BD", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPDadosContato = new javax.swing.JPanel();
        jLNome = new javax.swing.JLabel();
        jLTelefone = new javax.swing.JLabel();
        jTFChamado = new javax.swing.JTextField();
        jTFCodigo = new javax.swing.JTextField();
        jTFFerramenta = new javax.swing.JTextField();
        jLTelefone1 = new javax.swing.JLabel();
        jLChamado = new javax.swing.JLabel();
        jLFerramenta = new javax.swing.JLabel();
        jLFerramentaChamado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPDadosContato.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados da Ferramenta e Chamado"));

        jLNome.setText("Código");

        jLTelefone.setText("Código chamado");

        jTFChamado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFChamadoKeyReleased(evt);
            }
        });

        jTFCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFCodigoKeyReleased(evt);
            }
        });

        jTFFerramenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFFerramentaKeyReleased(evt);
            }
        });

        jLTelefone1.setText("Código ferramenta");

        jLChamado.setText("Título do chamado");

        jLFerramenta.setText("Descrição da ferramenta");

        jLFerramentaChamado.setText(" ");

        javax.swing.GroupLayout jPDadosContatoLayout = new javax.swing.GroupLayout(jPDadosContato);
        jPDadosContato.setLayout(jPDadosContatoLayout);
        jPDadosContatoLayout.setHorizontalGroup(
            jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDadosContatoLayout.createSequentialGroup()
                .addGroup(jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPDadosContatoLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLTelefone))
                    .addGroup(jPDadosContatoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLNome)
                            .addComponent(jLTelefone1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTFFerramenta, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                    .addComponent(jTFChamado)
                    .addComponent(jTFCodigo))
                .addGap(18, 18, 18)
                .addGroup(jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLChamado)
                    .addComponent(jLFerramenta)
                    .addComponent(jLFerramentaChamado))
                .addContainerGap(119, Short.MAX_VALUE))
        );
        jPDadosContatoLayout.setVerticalGroup(
            jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDadosContatoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLNome)
                    .addComponent(jTFCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLFerramentaChamado))
                .addGap(21, 21, 21)
                .addGroup(jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLTelefone)
                    .addComponent(jTFChamado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLChamado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFFerramenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLTelefone1)
                    .addComponent(jLFerramenta))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPDadosContato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPDadosContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFChamadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFChamadoKeyReleased
        // TODO add your handling code here:
        try {
            ChamadoDAO chamadoDAO = new ChamadoDAO();
            Chamado chamado = (Chamado) chamadoDAO.consulta(jTFChamado.getText().trim());
            String texto =
            (chamado != null)? chamado.getTitulo() : "Chamado não encontrado";
            jLChamado.setText(texto);
        } catch (SQLException ex) {
            Logger.getLogger(TelaGestaoChamado.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTFChamadoKeyReleased

    private void jTFFerramentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFFerramentaKeyReleased
        // TODO add your handling code here:
        try {
            FerramentaDAO ferramentaDAO = new FerramentaDAO();
            Ferramenta ferramenta = (Ferramenta) ferramentaDAO.consulta(jTFFerramenta.getText().trim());
            String texto =
            (ferramenta != null)? ferramenta.getDescricao() : "Ferramenta não encontrada";
            jLFerramenta.setText(texto);
        } catch (SQLException ex) {
            Logger.getLogger(TelaGestaoChamado.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTFFerramentaKeyReleased

    private void jTFCodigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFCodigoKeyReleased
        try {
            // TODO add your handling code here:
            FerramentaChamado ferramentaChamado
                    = (FerramentaChamado) dadosDAO.consulta(jTFCodigo.getText().trim());
            jLFerramentaChamado.setText(
                    ferramentaChamado != null ? "Código já cadastrado" : "Código não cadastrado"
            );
        } catch (SQLException ex) {
            Logger.getLogger(TelaGestaoFerramentaChamado.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTFCodigoKeyReleased

    private void setComponentes() {
        setTitle("Gestão de Ferramentas e Chamados");
        setLocationRelativeTo(null);
        setResizable(false);
    }

    @Override
    protected IKey montaDado() {
        FerramentaChamado ferramentaChamado =
                new FerramentaChamado(
                        jTFCodigo.getText().trim(),
                        jTFChamado.getText().trim(),
                        jTFFerramenta.getText().trim()
                );
        return ferramentaChamado;
    }

    @Override
    protected boolean validarCampos() {
        if (jTFCodigo.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(
                    this,
                    "É obrigatório o preenchimento do campo 'Código'",
                    "Aviso",
                    JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (jTFChamado.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(
                    this,
                    "É obrigatório o preenchimento do campo 'Chamado'",
                    "Aviso",
                    JOptionPane.WARNING_MESSAGE);
            return false;
        }
        
        if (jTFFerramenta.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(
                    this,
                    "É obrigatório o preenchimento do campo 'Ferramenta'",
                    "Aviso",
                    JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;

    }

    @Override
    protected void exibirDados() {
        String chamado = "";
        String ferramenta = "";
        
        try {
            ChamadoDAO chamadoDAO = new ChamadoDAO();
            Chamado c =
                    (Chamado) chamadoDAO.consulta(((FerramentaChamado) dados.get(corrente)).getChamado());
            chamado = c.getTitulo();
        } catch (SQLException ex) {
            Logger.getLogger(TelaGestaoChamado.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            FerramentaDAO ferramentaDAO = new FerramentaDAO();
            Ferramenta f = 
                    (Ferramenta) ferramentaDAO.consulta(((FerramentaChamado) dados.get(corrente)).getFerramenta());
            ferramenta = f.getDescricao();
        } catch (SQLException ex) {
            Logger.getLogger(TelaGestaoChamado.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        jTFCodigo.setText(((FerramentaChamado) dados.get(corrente)).getCodigo());
        jTFChamado.setText(((FerramentaChamado)dados.get(corrente)).getChamado());
        jTFFerramenta.setText(((FerramentaChamado)dados.get(corrente)).getFerramenta());
        jLChamado.setText(chamado != null ? chamado : "P");
        jLFerramenta.setText(ferramenta != null ? ferramenta : "F");
    }

    @Override
    protected void setEstadoVisualizacao() {
        jTFCodigo.setEditable(false);
        jTFChamado.setEditable(false);
        jTFFerramenta.setEditable(false);
        jLFerramentaChamado.setVisible(false);
    }

    @Override
    protected void setEstadoInsercao() {
        jTFCodigo.setEditable(true);
        jTFChamado.setEditable(true);
        jTFFerramenta.setEditable(true);
        jTFCodigo.requestFocusInWindow();
        jLChamado.setText("Título do chamado");
        jLFerramenta.setText("Descrição da ferramenta");
        jLFerramentaChamado.setVisible(true);
        jLFerramentaChamado.setText("");
    }

    @Override
    protected void setEstadoEdicao() {
        jTFCodigo.setEditable(false);
        jTFChamado.setEditable(true);
        jTFFerramenta.setEditable(true);
        jTFChamado.requestFocusInWindow();
    }

    @Override
    protected void listar() {
        TelaPesquisa listagem = new TelaPesquisa(
                null,
                true,
                "Ferramentas e Chamados Armazenados",
                dadosDAO,
                "ferramenta_chamado");
        listagem.setLocationRelativeTo(null);
        listagem.setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLChamado;
    private javax.swing.JLabel jLFerramenta;
    private javax.swing.JLabel jLFerramentaChamado;
    private javax.swing.JLabel jLNome;
    private javax.swing.JLabel jLTelefone;
    private javax.swing.JLabel jLTelefone1;
    private javax.swing.JPanel jPDadosContato;
    private javax.swing.JTextField jTFChamado;
    private javax.swing.JTextField jTFCodigo;
    private javax.swing.JTextField jTFFerramenta;
    // End of variables declaration//GEN-END:variables
}
