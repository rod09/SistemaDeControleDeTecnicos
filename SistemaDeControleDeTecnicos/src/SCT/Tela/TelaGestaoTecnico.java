/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SCT.Tela;

import SCT.DAO.TecnicoDAO;
import SCT.Classe.IKey;
import SCT.Classe.Tecnico;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Ró
 */
public class TelaGestaoTecnico extends TelaPadrao {

    public TelaGestaoTecnico(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        try {
            dadosDAO = new TecnicoDAO();
        } catch (SQLException ex) {
            javax.swing.JOptionPane.showMessageDialog(null, ex.getMessage(),
                    "Conectando BD", javax.swing.JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPDadosContato = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTFNome = new javax.swing.JTextField();
        jTFEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTFDataContratacao = new javax.swing.JFormattedTextField();
        jTFCodigo = new javax.swing.JTextField();
        jBDataAtual = new javax.swing.JButton();
        jLTecnico = new javax.swing.JLabel();
        jTFTelefone = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestão de Técnicos");

        jPDadosContato.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Tecnico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 204)));

        jLabel1.setText("Codigo");

        jLabel2.setText("Nome:");

        jLabel3.setText("Data de Contratação");

        jLabel4.setText("Email:");

        jTFNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFNomeKeyReleased(evt);
            }
        });

        jTFEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFEmailKeyReleased(evt);
            }
        });

        jLabel6.setText("Telefone");

        try {
            jTFDataContratacao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jTFDataContratacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFDataContratacaoKeyReleased(evt);
            }
        });

        jTFCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFCodigoKeyReleased(evt);
            }
        });

        jBDataAtual.setText("Data Atual");
        jBDataAtual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDataAtualActionPerformed(evt);
            }
        });

        jLTecnico.setText(" ");

        try {
            jTFTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPDadosContatoLayout = new javax.swing.GroupLayout(jPDadosContato);
        jPDadosContato.setLayout(jPDadosContatoLayout);
        jPDadosContatoLayout.setHorizontalGroup(
            jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDadosContatoLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPDadosContatoLayout.createSequentialGroup()
                            .addComponent(jTFDataContratacao, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBDataAtual)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE))
                        .addComponent(jTFEmail)
                        .addComponent(jTFNome))
                    .addGroup(jPDadosContatoLayout.createSequentialGroup()
                        .addComponent(jTFCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLTecnico))
                    .addComponent(jTFTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPDadosContatoLayout.setVerticalGroup(
            jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPDadosContatoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTFCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLTecnico))
                .addGap(13, 13, 13)
                .addGroup(jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTFNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTFDataContratacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBDataAtual))
                .addGap(18, 18, 18)
                .addGroup(jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTFEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPDadosContatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTFTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPDadosContato, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPDadosContato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBDataAtualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDataAtualActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");  
        String dataFormatada = formatador.format(System.currentTimeMillis());
        jTFDataContratacao.setText(dataFormatada);
    }//GEN-LAST:event_jBDataAtualActionPerformed

    private void jTFCodigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFCodigoKeyReleased
        try {
            // TODO add your handling code here:
            Tecnico tecnico = (Tecnico) dadosDAO.consulta(jTFCodigo.getText().trim());
            jLTecnico.setText(
                    tecnico != null 
                            ? "Código já cadastrado" 
                            : "Código não cadastrado");
        } catch (SQLException ex) {
            Logger.getLogger(TelaGestaoTecnico.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jTFNome.requestFocusInWindow();
        }
    }//GEN-LAST:event_jTFCodigoKeyReleased

    private void jTFDataContratacaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFDataContratacaoKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jTFEmail.requestFocusInWindow();
        }
    }//GEN-LAST:event_jTFDataContratacaoKeyReleased

    private void jTFEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFEmailKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jTFTelefone.requestFocusInWindow();
        }
    }//GEN-LAST:event_jTFEmailKeyReleased

    private void jTFNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTFNomeKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jTFDataContratacao.requestFocusInWindow();
        }
    }//GEN-LAST:event_jTFNomeKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBDataAtual;
    private javax.swing.JLabel jLTecnico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPDadosContato;
    private javax.swing.JTextField jTFCodigo;
    private javax.swing.JFormattedTextField jTFDataContratacao;
    private javax.swing.JTextField jTFEmail;
    private javax.swing.JTextField jTFNome;
    private javax.swing.JFormattedTextField jTFTelefone;
    // End of variables declaration//GEN-END:variables

    @Override
    protected IKey montaDado() {
        DateFormat format = new SimpleDateFormat("dd/MM/yyyy");
        java.util.Date date = null;
        try {
            date = format.parse(jTFDataContratacao.getText());
        } catch (ParseException ex) {
            Logger.getLogger(TelaGestaoTecnico.class.getName()).log(Level.SEVERE, null, ex);
        }
        java.sql.Date sqlDate = new java.sql.Date(date.getTime());

        Tecnico tecnico = new Tecnico();
        tecnico.setCodigo(jTFCodigo.getText().trim());
        tecnico.setNome(jTFNome.getText());
        tecnico.setEmail(jTFEmail.getText());
        tecnico.setTelefone(jTFTelefone.getText());
        tecnico.setData_contratacao(sqlDate);
        return tecnico;
    }

    @Override
    protected boolean validarCampos() {
        if (jTFCodigo.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "É obrigatório o preenchimento do campo 'Codigo'",
                    "Aviso",
                    0);
            return false;
        }
        if (jTFNome.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "É obrigatório o preenchimento do campo 'Nome'",
                    "Aviso", 0);
            return false;
        }

        if (jTFDataContratacao.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "É obrigatório o preenchimento do campo 'Data de contratação'", "Aviso", 0);
            return false;
        }

        if (jTFEmail.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(
                    this,
                    "É obrigatório o preenchimento do campo 'Email'",
                    "Aviso",
                    0);
            return false;
        }

        if (jTFTelefone.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "É obrigatório o preenchimento do campo 'Telefone'", "Aviso", 0);
            return false;
        }
        return true;
    }

    @Override
    protected void exibirDados() {
        SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");  
        String dataFormatada = formatador.format(
                ((Tecnico)dados.get(corrente)).getData_contratacao());
        
        jTFNome.setText(((Tecnico)dados.get(corrente)).getNome());
        jTFCodigo.setText(((Tecnico)dados.get(corrente)).getCodigo());
        jTFDataContratacao.setText(dataFormatada);
        jTFEmail.setText(((Tecnico)dados.get(corrente)).getEmail());
        jTFTelefone.setText(((Tecnico)dados.get(corrente)).getTelefone());
    }

    @Override
    protected void listar() {
        TelaPesquisa listagem = new TelaPesquisa(
                null,
                true,
                "Técnicos Armazenados",
                dadosDAO,
                "tecnico");
        listagem.setLocationRelativeTo(this);
        listagem.setVisible(true);
    }

    @Override
    protected void setEstadoVisualizacao() {
            jTFNome.setEditable(false);
            jTFCodigo.setEditable(false);
            jTFEmail.setEditable(false);
            jTFDataContratacao.setEditable(false);
            jTFTelefone.setEditable(false);
            jBDataAtual.setEnabled(false);
            jLTecnico.setVisible(false);
    }

    @Override
    protected void setEstadoInsercao() {
            jTFNome.setEditable(true);
            jTFCodigo.setEditable(true);
            jTFEmail.setEditable(true);
            jTFDataContratacao.setEditable(true);
            jTFTelefone.setEditable(true);
            jBDataAtual.setEnabled(true);
            jLTecnico.setVisible(true);
            jLTecnico.setText("");
    }

    @Override
    protected void setEstadoEdicao() {
            jTFNome.setEditable(true);
            jTFCodigo.setEditable(false);
            jTFEmail.setEditable(true);
            jTFDataContratacao.setEditable(true);
            jTFTelefone.setEditable(true);
            jBDataAtual.setEnabled(true);
    }
}
